diff --git a/schemas/org.gnome.shell.extensions.pop-shell.gschema.xml b/schemas/org.gnome.shell.extensions.pop-shell.gschema.xml
index b74ff81..79d6b7a 100644
--- a/schemas/org.gnome.shell.extensions.pop-shell.gschema.xml
+++ b/schemas/org.gnome.shell.extensions.pop-shell.gschema.xml
@@ -55,49 +55,49 @@
 
         <!-- Focus Shifting -->
         <key type="as" name="focus-left">
-            <default><![CDATA[['<Super>Left','<Super>KP_Left','<Super>h']]]></default>
+            <default><![CDATA[['<Super>Left','<Super>KP_Left']]]></default>
             <summary>Focus left window</summary>
         </key>
 
         <key type="as" name="focus-down">
-            <default><![CDATA[['<Super>Down','<Super>KP_Down','<Super>j']]]></default>
+            <default><![CDATA[['<Super>Down','<Super>KP_Down']]]></default>
             <summary>Focus down window</summary>
         </key>
 
         <key type="as" name="focus-up">
-            <default><![CDATA[['<Super>Up','<Super>KP_Up','<Super>k']]]></default>
+            <default><![CDATA[['<Super>Up','<Super>KP_Up']]]></default>
             <summary>Focus up window</summary>
         </key>
 
         <key type="as" name="focus-right">
-            <default><![CDATA[['<Super>Right','<Super>KP_Right','<Super>l']]]></default>
+            <default><![CDATA[['<Super>Right','<Super>KP_Right']]]></default>
             <summary>Focus right window</summary>
         </key>
 
         <!-- Launcher -->
         <key type="as" name="activate-launcher">
-            <default><![CDATA[['<Super>slash']]]></default>
+            <default><![CDATA[[]]]></default>
             <summary>Search key combo</summary>
         </key>
 
         <!-- Window Management Keys -->
         <key type="as" name="toggle-stacking">
-            <default><![CDATA[['s']]]></default>
+            <default><![CDATA[[]]]></default>
             <summary>Toggle stacking mode inside management mode</summary>
         </key>
 
         <key type="as" name="toggle-stacking-global">
-            <default><![CDATA[['<Super>s']]]></default>
+            <default><![CDATA[[]]]></default>
             <summary>Toggle stacking mode outside management mode</summary>
         </key>
 
         <key type="as" name="management-orientation">
-            <default><![CDATA[['o']]]></default>
+            <default><![CDATA[['Space']]]></default>
             <summary>Toggle tiling orientation</summary>
         </key>
 
         <key type="as" name="tile-enter">
-            <default><![CDATA[['<Super>Return','<Super>KP_Enter']]]></default>
+            <default><![CDATA[['<Super><Shift>Return','<Super><Shift>KP_Enter']]]></default>
             <summary>Enter tiling mode</summary>
         </key>
 
@@ -112,13 +112,13 @@
         </key>
 
         <key type="as" name="toggle-floating">
-            <default><![CDATA[['<Super>g']]]></default>
+            <default><![CDATA[['<Super><Shift>Space']]]></default>
             <summary>Toggles a window between floating and tiling</summary>
         </key>
 
         <!-- Tiling Mode -->
         <key type="as" name="toggle-tiling">
-            <default><![CDATA[['<Super>y']]]></default>
+            <default><![CDATA[['<Super>Space']]]></default>
             <summary>Toggles auto-tiling on and off</summary>
         </key>
 
@@ -144,7 +144,7 @@
         </key>
 
         <key type="as" name="tile-orientation">
-            <default><![CDATA[['<Super>o']]]></default>
+            <default><![CDATA[['<Primary><Super>Space']]]></default>
             <summary>Toggle tiling orientation</summary>
         </key>
 
@@ -193,32 +193,32 @@
         <!-- Workspace Management -->
 
         <key type="as" name="pop-workspace-down">
-            <default><![CDATA[['<Super><Shift>Down','<Super><Shift>KP_Down','<Super><Shift>j']]]></default>
+            <default><![CDATA[[]]]></default>
             <summary>Move window to the lower workspace</summary>
         </key>
 
         <key type="as" name="pop-workspace-up">
-            <default><![CDATA[['<Super><Shift>Up','<Super><Shift>KP_Up','<Super><Shift>k']]]></default>
+            <default><![CDATA[[]]]></default>
             <summary>Move window to the upper workspace</summary>
         </key>
 
         <key type="as" name="pop-monitor-down">
-            <default><![CDATA[['<Super><Shift><Primary>Down','<Super><Shift><Primary>KP_Down','<Super><Shift><Primary>j']]]></default>
+            <default><![CDATA[[]]]></default>
             <summary>Move window to the lower monitor</summary>
         </key>
 
         <key type="as" name="pop-monitor-up">
-            <default><![CDATA[['<Super><Shift><Primary>Up','<Super><Shift><Primary>KP_Up','<Super><Shift><Primary>k']]]></default>
+            <default><![CDATA[[]]]></default>
             <summary>Move window to the upper monitor</summary>
         </key>
 
         <key type="as" name="pop-monitor-left">
-            <default><![CDATA[['<Super><Shift>Left','<Super><Shift>KP_Left','<Super><Shift>h']]]></default>
+            <default><![CDATA[[]]]></default>
             <summary>Move window to the leftward monitor</summary>
         </key>
 
         <key type="as" name="pop-monitor-right">
-            <default><![CDATA[['<Super><Shift>Right','<Super><Shift>KP_Right','<Super><Shift>l']]]></default>
+            <default><![CDATA[[]]]></default>
             <summary>Move window to the rightward monitor</summary>
         </key>
 
diff --git a/src/color_dialog/src/main.ts b/src/color_dialog/src/main.ts
index 9522499..16968b9 100644
--- a/src/color_dialog/src/main.ts
+++ b/src/color_dialog/src/main.ts
@@ -1,4 +1,4 @@
-#!/usr/bin/gjs
+#!/usr/bin/env gjs
 
 imports.gi.versions.Gtk = '3.0';
 
@@ -6,7 +6,7 @@ const { Gio, GLib, Gtk, Gdk } = imports.gi;
 
 const EXT_PATH_DEFAULTS = [
     GLib.get_home_dir() + "/.local/share/gnome-shell/extensions/",
-    "/usr/share/gnome-shell/extensions/"
+    "/run/current-system/sw/share/gnome-shell/extensions/"
 ];
 const DEFAULT_HINT_COLOR = 'rgba(251, 184, 108, 1)'; //pop-orange
 
@@ -84,4 +84,4 @@ function launch_color_dialog() {
 
 Gtk.init(null);
 
-launch_color_dialog()
\ No newline at end of file
+launch_color_dialog()
diff --git a/src/extension.ts b/src/extension.ts
index c1af4d4..fcf21f5 100644
--- a/src/extension.ts
+++ b/src/extension.ts
@@ -535,7 +535,7 @@ export class Ext extends Ecs.System<ExtEvent> {
     exception_dialog() {
         let path = Me.dir.get_path() + "/floating_exceptions/main.js";
 
-        utils.async_process(["gjs", path], null, null)
+        utils.async_process([path], null, null)
             .then(output => {
                 log.debug(`Floating Window Dialog Event: ${output}`)
                 switch (output.trim()) {
@@ -2460,7 +2460,7 @@ function enable() {
 
     if (!indicator) {
         indicator = new PanelSettings.Indicator(ext);
-        panel.addToStatusArea('pop-shell', indicator.button);
+        panel.addToStatusArea('pop-shell', indicator.button, 1);
     }
 
     ext.keybindings.enable(ext.keybindings.global)
diff --git a/src/floating_exceptions/src/main.ts b/src/floating_exceptions/src/main.ts
index b3964e0..bd08623 100644
--- a/src/floating_exceptions/src/main.ts
+++ b/src/floating_exceptions/src/main.ts
@@ -1,4 +1,4 @@
-#!/usr/bin/gjs
+#!/usr/bin/env gjs
 
 imports.gi.versions.Gtk = '3.0'
 
diff --git a/src/launcher_service.ts b/src/launcher_service.ts
index 9da6587..0d0cb49 100644
--- a/src/launcher_service.ts
+++ b/src/launcher_service.ts
@@ -165,4 +165,4 @@ export namespace JsonIPC {
     }
 
     export type GpuPreference = "Default" | "NonDefault"
-}
\ No newline at end of file
+}
diff --git a/src/panel_settings.ts b/src/panel_settings.ts
index 83ff56c..1515ab4 100644
--- a/src/panel_settings.ts
+++ b/src/panel_settings.ts
@@ -66,10 +66,6 @@ export class Indicator {
 
         bm.addMenuItem(this.toggle_tiled);
         bm.addMenuItem(floating_window_exceptions(ext, bm));
-
-        bm.addMenuItem(menu_separator(''));
-        bm.addMenuItem(shortcuts(bm));
-        bm.addMenuItem(settings_button(bm));
         bm.addMenuItem(menu_separator(''));
 
         if (!Utils.is_wayland()) {
@@ -94,24 +90,6 @@ function menu_separator(text: any): any {
     return new PopupSeparatorMenuItem(text);
 }
 
-function settings_button(menu: any): any {
-    let item = new PopupMenuItem(_('View All'));
-    item.connect('activate', () => {
-        let path: string | null = GLib.find_program_in_path('pop-shell-shortcuts');
-        if (path) {
-            imports.misc.util.spawn([path]);
-        } else {
-            imports.misc.util.spawn(['xdg-open', 'https://support.system76.com/articles/pop-keyboard-shortcuts/']);
-        }
-
-        menu.close();
-    })
-
-    item.label.get_clutter_text().set_margin_left(12);
-
-    return item;
-}
-
 function floating_window_exceptions(ext: Ext, menu: any): any {
     let label = new St.Label({ text: "Floating Window Exceptions" })
     label.set_x_expand(true)
@@ -137,62 +115,6 @@ function floating_window_exceptions(ext: Ext, menu: any): any {
     return base;
 }
 
-function shortcuts(menu: any): any {
-    let layout_manager = new Clutter.GridLayout({ orientation: Clutter.Orientation.HORIZONTAL });
-    let widget = new St.Widget({ layout_manager, x_expand: true });
-
-    let item = new PopupBaseMenuItem();
-    item.add_child(widget);
-    item.connect('activate', () => {
-        let path: string | null = GLib.find_program_in_path('pop-shell-shortcuts');
-        if (path) {
-            imports.misc.util.spawn([path]);
-        } else {
-            imports.misc.util.spawn(['xdg-open', 'https://support.system76.com/articles/pop-keyboard-shortcuts/']);
-        }
-
-        menu.close();
-    })
-
-    function create_label(text: string): any {
-        return new St.Label({ text });
-    }
-
-    function create_shortcut_label(text: string): any {
-        let label = create_label(text);
-        label.set_x_align(Clutter.ActorAlign.END);
-        return label;
-    }
-
-    layout_manager.set_row_spacing(12);
-    layout_manager.set_column_spacing(30);
-    layout_manager.attach(create_label(_('Shortcuts')), 0, 0, 2, 1);
-
-    let launcher_shortcut = _("Super + /")
-    const cosmic_settings = Me.imports.settings.settings_new_id('org.gnome.shell.extensions.pop-cosmic')
-    if (cosmic_settings) {
-        if (cosmic_settings.get_enum('overlay-key-action') === 2) {
-            launcher_shortcut = _("Super")
-        }
-    }
-
-    [
-        [_('Launcher'), launcher_shortcut],
-        [_('Navigate Windows'), _('Super + Arrow Keys')],
-        [_('Toggle Tiling'), _('Super + Y')],
-    ].forEach((section, idx) => {
-        let key = create_label(section[0]);
-        key.get_clutter_text().set_margin_left(12);
-
-        let val = create_shortcut_label(section[1]);
-
-        layout_manager.attach(key, 0, idx + 1, 1, 1);
-        layout_manager.attach(val, 1, idx + 1, 1, 1);
-    });
-
-    return item;
-}
-
 function clamp(input: number): number {
     return Math.min(Math.max(0, input), 128);
 }
@@ -338,7 +260,7 @@ function color_selector(ext: Ext, menu: any) {
     color_selector_item.add_child(color_button);
     color_button.connect('button-press-event', () => {
         let path = Me.dir.get_path() + "/color_dialog/main.js";
-        let resp = GLib.spawn_command_line_async(`gjs ${path}`);
+        let resp = GLib.spawn_command_line_async(`${path}`);
         if (!resp) {
 
             return null;
@@ -353,4 +275,4 @@ function color_selector(ext: Ext, menu: any) {
     });
 
     return color_selector_item;
-}
\ No newline at end of file
+}
